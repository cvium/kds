/**
 * Created by clausvium on 21/12/15.
 */
package sortedList;

import ProGAL.geom2d.Point;
import ProGAL.geom2d.viewer.J2DScene;
import ProGAL.geom2d.*;
import kds.Certificate;
import kds.KDSPoint;

import java.awt.*;
import java.lang.reflect.Array;
import java.util.*;

class run {
    private static int N = 500;
    private static int M = 3;
    private static int T = 10;
    private static double TIMESTEP = 0.01;

    public static void main(String[] args) throws Exception {
        J2DScene scene = J2DScene.createJ2DSceneInFrame();
        Random rand = new Random();
        ArrayList<KDSPoint> points = new ArrayList<>(N);
        /*points.add(new KDSPoint(new double[]{0.21178174548323625,0.35227221303691514}, new double[]{0, 0}));
        points.add(new KDSPoint(new double[]{0.38776908727933024,0.36598790870872144}, new double[]{0, 0}));
        points.add(new KDSPoint(new double[]{0.12881156841380526,0.9544637264652279}, new double[]{0, 0}));
        points.add(new KDSPoint(new double[]{0.25701489343390926,0.5136243875865947}, new double[]{0, 0}));
        Color[] c = {Color.BLUE, Color.RED, Color.BLACK, Color.MAGENTA, Color.GREEN};

        for(int i = 0; i < N; ++i) {
            points.get(i).draw(scene, 0, c[i]);
        }*/
        /*
        points.add(new KDSPoint(new double[]{0.3904569761385204, 0.02698062109381527}, new double[]{0, 0}));
        points.add(new KDSPoint(new double[]{0.1658290937912802, 0.8027016482417944}, new double[]{0, 0}));
        points.add(new KDSPoint(new double[]{0.43716114650039883, 0.5547079004649283}, new double[]{0, 0}));
        points.add(new KDSPoint(new double[]{0.9929681488989968, 0.1354213645339587}, new double[]{0, 0}));
        points.add(new KDSPoint(new double[]{0.6700482058998174, 0.4796405986054495}, new double[]{0, 0}));
        points.add(new KDSPoint(new double[]{0.49311222649462605, 0.6895203840234286}, new double[]{0, 0}));
        points.add(new KDSPoint(new double[]{0.8794640365309483, 0.3575054364380311}, new double[]{0, 0}));
        points.add(new KDSPoint(new double[]{0.8259547387806009, 0.5105496759433658}, new double[]{0, 0}));
        points.add(new KDSPoint(new double[]{0.9158694718752232, 0.7472441411417013}, new double[]{0, 0}));
        points.add(new KDSPoint(new double[]{0.9819330206706257, 0.7471000852315168}, new double[]{0, 0}));

        Color[] c = {Color.BLUE, Color.RED, Color.BLACK, Color.MAGENTA, Color.GREEN, Color.CYAN, Color.darkGray,
                Color.ORANGE, Color.PINK, Color.YELLOW};

        for(int i = 0; i < N; ++i) {
            points.get(i).draw(scene, 0, c[i]);
        }*/

        /*
        points.add(new KDSPoint(new double[]{0.3904569761385204, 0.02698062109381527, 0.48964497038000576,
                0.7075512249796881, 0.7010952138904888}, new double[]{0, 0, 0, 0, 0}));
        points.add(new KDSPoint(new double[]{0.17678047033477418, 0.3919109435017235, 0.9302073481374996,
                0.6304472034698598, 0.6815572963336319}, new double[]{0, 0, 0, 0, 0}));
        points.add(new KDSPoint(new double[]{0.4256458871449901, 0.47327950117544715, 0.08148073711826309,
                0.8127529937983307, 0.3697212003652316}, new double[]{0, 0, 0, 0, 0}));
        points.add(new KDSPoint(new double[]{0.2975797846297298, 0.7420598513209492, 0.08170569261832572,
                0.9058111471292961, 0.2844109529943464}, new double[]{0, 0, 0, 0, 0}));
        points.add(new KDSPoint(new double[]{0.3025843272705221, 0.8474512950612914, 0.4478570204062481,
                0.056794581831290936, 0.505997635035555}, new double[]{0, 0, 0, 0, 0}));
        points.add(new KDSPoint(new double[]{0.3553933715001161, 0.24416854923976428, 0.9163552946863107,
                0.8667556856377399, 0.6024291299257032}, new double[]{0, 0, 0, 0, 0}));
        points.add(new KDSPoint(new double[]{0.6888883511198657, 0.32285109967969505, 0.1623488838406998,
                0.08464831747912127, 0.3096897969409068}, new double[]{0, 0, 0, 0, 0}));
        points.add(new KDSPoint(new double[]{0.6206635342602977, 0.5366296901434615, 0.09034548410518517,
                0.9030273267967269, 0.7353781403591911}, new double[]{0, 0, 0, 0, 0}));
        points.add(new KDSPoint(new double[]{0.5259735888845548, 0.699523549737408, 0.8039640994814269,
                0.8409951117911274, 0.33916494860394353}, new double[]{0, 0, 0, 0, 0}));
        points.add(new KDSPoint(new double[]{0.9087772057650372, 0.4311158087018987, 0.5448479624424398,
                0.7371832106732925, 0.28549155003542726}, new double[]{0, 0, 0, 0, 0}));
        */
        /*
        points.add(new KDSPoint(new double[]{0.5084869422792161,0.19800192479885215,0.45531448050522516,0.6868919667271562,0.993574466103454},new double[]{0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.9510228591488803,0.03841483529978151,0.19006801897766312,0.6585533932714205,0.3460709035712416},new double[]{0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.25782188127951255,0.10334321485581799,0.7860322898021634,0.5021049599206406,0.7912059082098827},new double[]{0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.7514373615074302,0.3587435774679024,0.2101030110419998,0.6359068655800417,0.18932358024005813},new double[]{0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.591902645017155,0.10738733837915682,0.6229280686152997,0.43280734831953327,0.36387180717568635},new double[]{0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.8346127908732816,0.7282367860373886,0.51229909257996,0.45763527190119524,0.004184124344166706},new double[]{0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.8424132697883455,0.024737611053175956,0.3742242229926528,0.41531343910169094,0.8364469552060154},new double[]{0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.9181919112217994,0.2341133532648475,0.7136245274149469,0.3444870290033041,0.9594894036166848},new double[]{0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.9437438686624938,0.6121554900159948,0.6736119178713141,0.7072884941928156,0.37170983274960956},new double[]{0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.8658071828592309,0.646190057220281,0.8413344170005207,0.7527785337648647,0.42272952933234764},new double[]{0.0,0.0,0.0,0.0,0.0}));

        *//*
        points.add(new KDSPoint(new double[]{0.4103753479430957,0.20397440729967298,0.206329275699086,0.753102096495774,0.46234011474204184},new double[]{0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.6166072679055391,0.8092095766960287,0.21157165002054756,0.22092587183386558,0.569188491996689},new double[]{0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.8117259953714798,0.1447546666764279,0.5257333623511364,0.059372297944845,0.8008006814521813},new double[]{0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.8172869512191797,0.7731619121170982,0.9982536150889694,0.399483297721809,0.03731637255620246},new double[]{0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.5049722371030404,0.6672971290383739,0.42054901783498977,0.4326216668627959,0.7020310840255034},new double[]{0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.48549758016432065,0.78626791153525,0.5736595722669466,0.1427656223756295,0.22779312919046868},new double[]{0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.037252411557737064,0.9893476731313464,0.9016753645513587,0.4968859776541439,0.17223443187258225},new double[]{0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.11064721059219618,0.43531992761004135,0.8180080235076149,0.635819312922344,0.5725188018766433},new double[]{0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.7315210031838416,0.19980141634885684,0.5027092269586045,0.10658101714273516,0.6820875590877933},new double[]{0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.38436710512136774,0.29458353845362883,0.4648101141032609,0.18019326069952601,0.29566710016660536},new double[]{0.0,0.0,0.0,0.0,0.0}));
        *//*
        points.add(new KDSPoint(new double[]{0.0909687526130456,0.33070108895515105,0.06928177033752525,0.9704695391446635,0.7291792389464729,0.12177964286016407,0.6604115882441811,0.42573275778440633,0.9140403607168467,0.22030856578527702},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.18380671484601518,0.26019892793396027,0.33309944355569787,0.9286610777095204,0.3722948345055693,0.6583769319221274,0.1565418880075632,0.8088729542529633,0.03557362847640966,0.6612508406489634},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.8559661876979232,0.15575101199531793,0.8317050169961154,0.636087317006132,0.17833043357161116,0.0017473988438632126,0.19483368588406902,0.08387116197595523,0.8994903945369018,0.7333423733128359},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.9327103181028141,0.47592826396061905,0.36163204616572997,0.7863731929530883,0.21560728898027726,0.1521147890119513,0.08503451008049445,0.43169210114679124,0.2924732673241408,0.3100221373533327},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.9369819030353101,0.36273196463870583,0.29068001954176637,0.7679677233098963,0.43927551524753994,0.6530029923445262,0.8824733908938031,0.49411113232273485,0.8006805505156538,0.6642397833846064},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.4342474502852416,0.8598565907449531,0.1717746342928188,0.6548628611940099,0.494019500196635,0.19777210710247128,0.4370475063001307,0.16361428146875545,0.11799024188206353,0.5225764602118053},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.5827351754471688,0.7246724671931825,0.5888328247970195,0.20831534871918156,0.3087534375775207,0.10824622998484157,0.53636049517754,0.005668372329984073,0.0892294814191088,0.07459366732245964},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.3354820655150633,0.030398729606792796,0.32851234158237685,0.5796068791801756,0.9268609127498549,0.2572779632572054,0.6081764479667723,0.4765485381017719,0.8824518639435551,0.613388403681345},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.2754146819903772,0.021221974166629298,0.6210978508317955,0.9805260657965018,0.7843507148463776,0.9068013042235662,0.1686258010938314,0.2884973878607804,0.2691829002519197,0.12974410584475427},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.7523895698611452,0.4094230677779067,0.8017048606861655,0.7196537668890801,0.8219650713862943,0.747733214826648,0.6656307246825068,0.253654345350776,0.7957108019358076,0.26135764913015824},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.7662859370600291,0.11978600158409003,0.9471644885660895,0.14668587635228447,0.9866070929061451,0.6941245163927977,0.36575512970404145,0.5731917446784011,0.8990273231324797,0.9527731599824766},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.8530664407684657,0.6631874143577758,0.7477063563394651,0.5525714784690013,0.9488963024164556,0.3779925850513557,0.026697437314848638,0.08330984024000254,0.020614667381161578,0.09387422255407074},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.29702576857730345,0.019434469860378556,0.49482948448124253,0.4294331635450307,0.10928638416191772,0.8806732403462575,0.862128750599822,0.32068363190338467,0.028251650695969244,0.24870680143439183},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.04367429985677618,0.43089256992231684,0.7921119164866853,0.5809563278291672,0.07268062062908687,0.7293156117902692,0.5813553470936466,0.21275324072474,0.8143202280388027,0.47628705470779875},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.22092573876839516,0.545602262831761,0.6243543623061223,0.9116912271857097,0.8941803276312513,0.18194438477421115,0.4297961181187968,0.6596635108262819,0.6083017031948907,0.6857713600096629},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.7041706295498203,0.23443878055617462,0.2182016912542254,0.723639011028508,0.20544480135381005,0.060586273397275736,0.2895869020626797,0.5720717443126093,0.14645687345605063,0.10543916704126932},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.4617392554952341,0.36504589103254415,0.6756841440412875,0.5623486786647687,0.2566970365124167,0.9991852021653002,0.16044450417767275,0.02046145360830509,0.4739053901807002,0.31449639149322206},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.7851358117118231,0.21004060324950324,0.408037236686544,0.02491910743940129,0.4038744829823393,0.7219201287510507,0.13256924912771983,0.8856586098527138,0.41990284056417126,0.06550319373508784},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.0028296909350559174,0.7532159907872309,0.703392337966926,0.05178513029852205,0.3496180440642309,0.5192251214448955,0.20477756282696546,0.76620197052225,0.05812914739741715,0.3806518030923044},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.9725141668768446,0.33067597124120984,0.35679715612001195,0.5466047352016651,0.7421608404104324,0.2450497767328892,0.6768078169499554,0.2759543000462341,0.1279444640468832,0.3451711828993088},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.8854100047928638,0.09015001460683392,0.7184739374657121,0.3182106294383641,0.5447905545822436,0.11207250174961458,0.055027446670537605,0.27536434318628433,0.10315905995561758,0.7444518772857324},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.5538444705028138,0.09791568322335042,0.0858220493574664,0.32032897472135446,0.9231127844697051,0.14469802105104868,0.42140925208445057,0.9332320240998379,0.5208474016063681,0.43732283274628314},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.012046698854613513,0.3861855549379577,0.4016172664106712,0.6241066142794387,0.5361549204049934,0.08636498052114705,0.5080824761473013,0.8644508737350748,0.25868293550039434,0.7561543114412805},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.5775633010876813,0.2724997172120741,0.31597163609309475,0.0315607619259185,0.8543693909045599,0.7122196820238982,0.5410729861625221,0.37538473421471585,0.62537606009151,0.5456169583063831},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.40023424139240527,0.24523931228315698,0.9293418630270106,0.40162756103772645,0.02238936302568495,0.12545838707278612,0.5297197661035479,0.15528572803303686,0.6208821810153252,0.8571282270663675},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.38622181869441985,0.08509713537402797,0.8302793278921726,0.6819223445402243,0.41215518090197756,0.6111128636944521,0.6110132804249615,0.5531147832040784,0.2625551624802812,0.10702085893192459},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.4107286055767341,0.5610926758172653,0.2623987875699797,0.02664191282127637,0.21358781477444266,0.7708836453366309,0.3546899811969447,0.9885374630841487,0.9574255959882152,0.3756592724554848},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.12496553582802594,0.5220066766560687,0.553523181185628,0.8328714723604108,0.5417789039961389,0.8935707784205525,0.40490730841348876,0.5686229773671049,0.0419760396609683,0.8051128565457654},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.8864613236173644,0.911069666867149,0.9850865246594019,0.7831617414684464,0.7237683197502888,0.14509669177171303,0.30290950756611823,0.7633785718073675,0.5874895880837754,0.9682064840088854},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.378383242773064,0.7151253998981308,0.5062138833469151,0.1715014549562166,0.8020838086830846,0.1480653409204432,0.8930964347664202,0.06983985415493488,0.6752068544053932,0.9960636903659941},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.08023867645993266,0.061688659361918585,0.5546439327798214,0.6832306298870091,0.25964340748712456,0.7118919943104141,0.9687729733090619,0.14276542252392954,0.6407121118221588,0.9195200291738885},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.6718397332655947,0.18133316473160876,0.4516342729952574,0.05815731912486277,0.45031569522293413,0.8600248319433147,0.13565173858496304,0.4574361300457399,0.3463747252953794,0.4975223429501541},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.7230629317019345,0.23231454019600484,0.6216396831538792,0.4919097704038531,0.8959659486998169,0.2605450455855711,0.6486068206858154,0.40464311224370075,0.7051210644689864,0.058974635860532976},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.18766485524461185,0.6535107845368137,0.24694694030841313,0.4157622639076636,0.18438231722181841,0.7209871968603058,0.8635470053264616,0.8982955429240623,0.3047451734832324,2.0260575838726425E-4},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.5897956980986738,0.7755331044018866,0.9152846424721618,0.2728223304537837,0.6388969313863737,0.468695081158781,0.11054236468317558,0.3414488330961123,0.6914597857337764,0.3756688695864371},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.692078610899582,0.5237305322446999,0.6330196437596259,0.8021932078901048,0.7112362731549215,0.556181562812093,0.17106538993654896,0.7768281490534107,0.3021319849563684,0.9527867352151308},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.4550162319094979,0.7269150017421527,0.051852788256883664,0.016786813481184604,0.42122488072294273,0.34917418470134864,0.08159516600621153,0.5136088403754328,0.08996584309456335,0.5212854803139323},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.34549066626721714,0.47872718005290404,0.45250121560822454,0.7697399105287742,0.39312048538830824,0.7563108411106743,0.9036988269826816,0.6344475688996662,0.9872287187551875,0.6428331243487847},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.3993101021023088,0.25203176244737724,0.5199024504557197,0.44438993518278336,0.646898514341837,0.6174344367838552,0.12849414300145423,0.8472936277187781,0.6755415964951585,0.27740343180460314},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.7768196931976614,0.7485788437129693,0.07181281793307903,0.6596276150820581,0.3376737125150743,0.5963781721019662,0.01818210540274179,0.8477309188446298,0.8894606244782345,0.34969485821749835},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.02485692196191991,0.3750317922830194,0.022748983176188342,0.8829206485553136,0.9072181327983437,0.5289200672480667,0.941813325434439,0.03251675306499735,0.12838844937911886,0.7328979324311216},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.5417363315319403,0.5115968689230855,0.10010305937468678,0.8047779881334235,0.443401373592175,0.6027206001406257,0.4149360828145645,0.27722569406118025,0.17671379288788247,0.8800267788995568},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.26906803619134034,0.5107794280008141,0.3166467387401004,0.20890607757070567,0.5271632594031861,0.02967657875772256,0.397215374161382,0.9247325340675767,0.9795585998278353,0.3672593027364275},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.8552409469311505,0.40174430184257093,0.34684768431860336,0.7204288396048294,0.08877429504922119,0.1889838724417443,0.4980776961161947,0.8815629364459701,0.9543057594102978,0.5122784846005803},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.16615852914260798,0.24150567525623134,0.6723965700833867,0.2195619078458534,0.16771706985058366,0.13868498136645124,0.1631247063993888,0.18140868932221632,0.7645120226332821,0.467107732441158},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.29074566242092126,0.7494726956969776,0.33965755108559736,0.24992831175535724,0.3612266405812483,0.12259189229766698,0.004286949842558396,0.8354812563711146,0.48682031484582966,0.3736415837671433},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.09892005385985891,0.4791143075908407,0.10860262786214814,0.4497886752708764,0.8086813408407346,0.3368532322380515,0.0509058492446558,0.6746199900676059,0.27264819793605555,0.3158754857058437},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.9708373328042484,0.1526877020113966,0.6349914552168139,0.8019644772894922,0.9615808537692097,0.0053355086679677255,0.45920397451331496,0.015562140058939744,0.3699362535600127,0.5512392838232844},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.8065943957662461,0.635732406650693,0.5965603312590223,0.3859166503190261,0.06635768687801491,0.3752937326979795,0.7616299860519454,0.8115293427225704,0.31691552459016936,0.3905740971032736},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));
        points.add(new KDSPoint(new double[]{0.6391564309248838,0.22162382649674672,0.5968532069693163,0.7656867641745466,0.1899368051744289,0.8550248165192207,0.9686621714799186,0.8239215433537478,0.3561380827352032,0.7989171759310937},new double[]{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}));

        Color[] c = {Color.BLUE, Color.RED, Color.BLACK, Color.MAGENTA, Color.GREEN, Color.CYAN, Color.GRAY,
                Color.ORANGE, Color.PINK, Color.YELLOW};

        for(int i = 0; i < N; ++i) {
            points.get(i).draw(scene, 0);
        }*/

        for (int i = 0; i < N; ++i) {
            double[] coeffsX = new double[M];
            double[] coeffsY = new double[M];

            for (int j = 0; j < M; ++j) {
                coeffsX[j] = rand.nextDouble();
                coeffsY[j] = 0;
            }
            points.add(new KDSPoint(coeffsX, coeffsY));
        }
        for(int i = 0; i < N; ++i) {
            points.get(i).draw(scene, 0);
        }
        KDSPoint.toFile(points);

        scene.centerCamera();
        scene.autoZoom();
        scene.repaint();
        SortedList sl = new SortedList(points);

        double t = 0.0;
        boolean event = false;
        while (t <= T) {
            scene.removeAllShapes();
            try {
                ArrayList<SortedEvent> es = sl.eq.peek();
                while (sl.eq.firstKey() <= t) {
                    es = sl.eq.poll();
                    for (SortedEvent<KDSPoint> e : es) {
                        if (e.getCertificate().isValid()) {
                            event = true;
                            e.process(t);
                            System.out.println("EVENT at time " + t);
                        }
                    }
                }
            } catch (NoSuchElementException e) {
                // do nothing
            }
            if (!sl.audit(t)) {
                System.out.println("Auditing failed");
                //throw new Exception("Auditing failed");
            }
            event = false;
            for(int i = 0; i < N; ++i) {
                //sl.points.get(i).draw(scene, t, c[i]);
                sl.points.get(i).draw(scene, t);
            }
            scene.repaint();
            //try{Thread.sleep(100);} catch(InterruptedException e) {}
            double nextFailTime;
            try {
                if (sl.eq.firstKey() - t < 0.01) {
                    //throw new NoSuchElementException();
                    nextFailTime = sl.eq.firstKey();
                } else {
                    nextFailTime = t + TIMESTEP;
                }
            } catch (NoSuchElementException e) {
                nextFailTime = t + TIMESTEP;
            }
            t = nextFailTime;
        }
        System.out.println("End of simulation.");
    }
}
